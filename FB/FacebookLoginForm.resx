<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFBIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAASAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuMTEA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAMAAwAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A/fyiiigArk/jR8c/hH+zv4EuPiZ8a/Hlh4d0S2cI97fOfnkOcRxooLyuQCQiBmIB44Nd
        ZX4//wDByF8QvEN58ffAPwpe+kGlaf4PbVo7YNhGuLi6mhZyO5CWqgE9MnHU16+RZYs3zKGGlKyd231s
        l0OLMMU8HhXVSu+h9X3/APwXv/4J62d29vb+JfFN0ithZ4PDEgR/cb2VvzAr63+G3j7w/wDFb4daB8UP
        CbzNpXiTRbXVNNa4i2SG3uIllj3L/C21xkdjX4e/8E5/+CRmv/t//CzWviynxwtfCdhpXiBtIigbQGvp
        Z5kghmdj+/iCKFnjA5Yk7umOf2y+BXw1b4MfBLwd8H31kaifCnhbT9HOoC38oXRtraOHzdm5tm7Zu27j
        jOMnrXpcSZfkmWyVHBzbqJ2kn009EvuZzZZicfiU51opRa0t/wAOzqqKKK+WPWOH/ac8Y+Ivh3+zZ8Qv
        iB4P1D7Jq+heB9W1DS7ryUk8m5hs5ZIn2uCrYdVOGBBxggiv52f2kP2p/jt+1v40s/iF+0D43GvavYaW
        mnWt2NMtrXZbLJJIqbLeONT88shyQT82M4Ax/SxqWm6drGnT6Rq9hDdWl1C0N1a3MQeOaNgVZGVgQykE
        gg8EGvxS/wCDgbwH4H+H37XXhXSPAPgzSdDtJfhxbTS2uj6dFbRvIb++UuVjUAthVGeuFHpX3vAmKw8M
        bKhKmnOV2paXSS1XfX1PnuIKVSVBVFL3Vuu58+fs4f8ABQ/9r/8AZI8E3fw6/Z++LK6Do99qr6ldWh0C
        wut9y8ccTSb7iCRhlIYxgHHy5xkkn+gr4Car4t134GeC9b8fakbzXbzwnp0+tXhhSPz7t7aNpn2Rqqrl
        yx2qABnAAHFfBf8Awb9fB/4S/EH9jrxPrPj34XeHNbvIviXdwxXWr6JBcyJENP09ggaRCQoLMcdMsT3r
        9HoIILWBLa2hSOONAscaKAqqBgAAdABXHxhjsJiMc6FOioyhJ80tLy23sr/ezbJcPWp0FUlNtSWi10HU
        UUV8ce2FfjD/AMHG3/J5fhL/ALJla/8Apxv6/Z6vjb/gol/wSL0/9v74x6T8W7v49TeFW0vw1FpAsI/D
        QvRIEuLibzd5uI8Z8/btwfu5zzgfRcL4/C5bmyrYiXLGzV7N7+lzzc2w9bFYN06au7r+tTiv+Dcv/kyn
        xX/2VK9/9Num19/V4J/wTt/Ybtf2AvgvqvwftPiXJ4qXU/FE2snUJNIFkYzJbW0HlbBLJnH2fduyPv4x
        xk+91w53iaOMzatWpO8ZO6e35m+ApTo4OEJqzSP/2Q==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A/v//APTu6wDgz8YA2sO4ANjBtgDy6+cA8evnALWIdACZWjwAmVk7AN3KwAD49fMApG1UAMyu
        nwCvfmcAoWdMALiOegDz7usA+ff1APr39QD9/PwA///+AJ1iRQDZw7gA2sW7AP7//gDaxrsAwp6NAJpd
        QACaWz4A4M/HAMGcigDq39kA9vHvAJtdQQD+/v4A4tPKANK2qADRtacAm15BAL2VgwDStagA1r2xANrG
        vADk19AA49XNAPXw7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0uLi4uLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        FwoKCgosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXCgoKCiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAABcKCgoKLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwoKCgosAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAXCgoKCiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcKCgoKLAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAFwoKCgosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXCgoKCiwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAABcKCgoKLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwoKCgosAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAXCgoKCiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcKCgoKLAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJSYnKAoKCgopKiorAAAAAAAAAAAAAAAAAAAAAAAAAAAgCgoKCgoK
        CgoKCiMkAAAAAAAAAAAAAAAAAAAAAAAAACAKCgoKCgoKCgoKCiIAAAAAAAAAAAAAAAAAAAAAAAAAIAoK
        CgoKCgoKCgoKIQAAAAAAAAAAAAAAAAAAAAAAAAAcHR0KCgoKCh4dHR0fAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWGhcKCgoKGxYWFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwoKCgoZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAABYXCgoKChgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAKCgoKERITFBUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAADwoKCgoKCgoKCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOCgoKCgoKCgoLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAwNCgoKCgoKCgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcICQoKCgoKCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAwQFBQUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>